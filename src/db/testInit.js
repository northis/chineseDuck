use chineseDuck

function getNextSequence(name) {
    var ret = db.counters.findAndModify(
        {
            query: { _id: name },
            update: { $inc: { seq: 1 } },
            new: true,
            upsert: true
        }
    );

    return NumberLong(ret.seq);
}

db.users.remove({})
db.folders.remove({})
db.words.remove({})
db.wordFiles.remove({})

var testUserName = "testUser";
var testFolderName = "testFolder";

db.users.insert(
    {
        _id: getNextSequence("userid"),
        username: testUserName,
        joinDate: ISODate(),
    }
)

var userId = db.users.find({ username: testUserName })[0]._id;

db.folders.insert(
    {
        _id: getNextSequence("folderid"),
        name: testFolderName,
        owner_id: userId,
        createDate: ISODate()
    }
)
var folderId = db.folders.find({ name: testFolderName })[0]._id;
var originalWordValue = '自行车';

db.words.insert(
    {
        _id: getNextSequence("wordid"),

        originalWord: originalWordValue,
        pronunciation: 'zi|xing|che',
        translation: 'велосипед',
        usage: '我有一个自行车',
        syllablesCount: NumberInt(3),
        score: {
            originalWordCount: NumberInt(0),
            originalWordSuccessCount: NumberInt(0),
            lastView: ISODate(),
            isInLearnMode: Boolean(false),
            pronunciationCount: NumberInt(0),
            pronunciationSuccessCount: NumberInt(0),
            translationCount: NumberInt(0),
            translationSuccessCount: NumberInt(0),
            viewCount: NumberInt(0)
        },
        owner_id: userId,
        folder_id: folderId
    }
)

var wordId = db.words.find({ owner_id: userId, originalWord: originalWordValue })[0]._id;

db.wordFiles.insert(
    {
        createDate: ISODate(),
        word_id: wordId,
        height: NumberInt(70),
        width: NumberInt(251),
        fileType: 'orig',
        bytes: BinData(0, '')
    }
)