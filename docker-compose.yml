version: '3.5'
services:
  duck_mongo:
    image: mongo:latest
    hostname: duck_mongo
    restart: unless-stopped
    container_name: duck_mongo
    environment:
      - MONGO_INITDB_DATABASE=admin
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=pwd
    volumes:
      - ./config/db.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - ./data:/data/db
    networks:
      udd3r_net:
          ipv4_address: 10.1.1.4

  duck_web:
    image: umputun/nginx-le:latest
    hostname: duck_web
    restart: unless-stopped
    container_name: duck_web
    volumes:
      - ./config/websrv.conf:/etc/nginx/service.conf
      - ./ssl:/etc/nginx/ssl
    ports:
      - "80:80"
      - "443:443"
    environment:
        - TZ=Europe
        - LETSENCRYPT=true
        - LE_EMAIL=CERT_EMAIL
        - LE_FQDN=PUBLIC_URL
        - SSL_CERT=le-crt.pem
        - SSL_KEY=le-key.pem
        - SSL_CHAIN_CERT=le-chain-crt.pem    
    networks:
      udd3r_net:
        ipv4_address: 10.1.1.5

  duck_api:
    image: node:10
    hostname: duck_api
    working_dir: /app
    restart: unless-stopped
    container_name: duck_api
    command: bash -c "npm install && node /app/server.js"
    networks:
      udd3r_net:
          ipv4_address: 10.1.1.6
    volumes:
      - ./package.json:/app/package.json
      - ./build:/app
      - ./build/public:/app/public
    ports:
      - "3000:3000"

  duck_bot:
    image: mcr.microsoft.com/dotnet/core/sdk:2.1
    working_dir: /app
    hostname: duck_bot
    restart: unless-stopped
    container_name: duck_bot
    command: bash -c "dotnet /app/chineseDuck.BotService.dll"
    volumes:
      - ./src/bot/chineseDuck.BotService/bin/release/netcoreapp2.1/publish:/app
    ports:
      - "8080:8080"
    networks:
      udd3r_net:
          ipv4_address: 10.1.1.7
          
networks:
  udd3r_net:
    name: udd3r
    ipam:
      config:
        - subnet: 10.1.1.0/24